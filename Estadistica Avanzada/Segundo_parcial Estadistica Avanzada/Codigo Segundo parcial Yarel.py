# -*- coding: utf-8 -*-
"""Untitled33.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-TMQQGKdVKETGKPdz4ewHQgEZMziKZnA
"""

#Cargar datos y visualizar relación
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.linear_model import LinearRegression
from sklearn.metrics import r2_score
import numpy as np

# Datos
data = {
    'Gasto Histórico': [5000, 15000, 20000, 10000, 12000, 8000, 25000, 3000, 22000, 7000, 16000, 13000, 9000, 11000, 30000],
    'Gasto Respuesta': [37.0, 59.5, 66.8, 47.2, 50.3, 43.0, 79.5, 33.9, 72.0, 41.8, 61.3, 52.8, 45.1, 49.5, 88.3]
}
df = pd.DataFrame(data)

# Visualización
plt.figure(figsize=(8, 6))
sns.scatterplot(x='Gasto Histórico', y='Gasto Respuesta', data=df)
plt.title('Relación entre Gasto Histórico y Respuesta')
plt.xlabel('Gasto Histórico ($)')
plt.ylabel('Gasto Respuesta ($)')
plt.grid(True)
plt.show()

#Ajustar modelo de regresión lineal simple
X = df[['Gasto Histórico']]  # X debe ser 2D
y = df['Gasto Respuesta']

model = LinearRegression()
model.fit(X, y)

pendiente = model.coef_[0]
intercepto = model.intercept_
r2 = model.score(X, y)

print(f"Ecuación del modelo: y = {intercepto:.2f} + {pendiente:.5f}x")
print(f"Coeficiente de determinación R² = {r2:.4f}")

#Gráfico con línea de regresión
plt.figure(figsize=(8, 6))
sns.scatterplot(x='Gasto Histórico', y='Gasto Respuesta', data=df)
plt.plot(df['Gasto Histórico'], model.predict(X), color='red', label='Línea de Regresión')
plt.legend()
plt.title('Modelo de Regresión Lineal')
plt.xlabel('Gasto Histórico ($)')
plt.ylabel('Gasto Respuesta ($)')
plt.grid(True)
plt.show()

#Predicciones específicas
import pandas as pd
import numpy as np

# Nuevos valores de x para predecir
valores_x = [12000, 0, 60000]

# Crear DataFrame con esos valores
nuevos = pd.DataFrame({'Gasto Histórico': valores_x})

# Usar el modelo entrenado previamente para predecir
nuevos['Gasto Estimado'] = model.predict(nuevos)

# Mostrar resultados
print(nuevos)

# Analisis de residuos
df['Predicción'] = model.predict(X)
df['Residuo'] = df['Gasto Respuesta'] - df['Predicción']

# Gráfico de residuos
plt.figure(figsize=(8, 6))
sns.residplot(x='Gasto Histórico', y='Gasto Respuesta', data=df, lowess=True)
plt.axhline(0, color='red', linestyle='--')
plt.title('Análisis de Residuos')
plt.xlabel('Gasto Histórico')
plt.ylabel('Residuo')
plt.grid(True)
plt.savefig('/mnt/data/residuos.png')